type Query {
  productsSortedByPrice: [Product]
  productsByCategory(categoryId: ID!): [Product]
  allProducts: [Product]
  product(id: ID!): Product
  allCategories: [Category]
  category(id: ID!): Category
  allUsers: [User]
  user(id: ID!): User
}

type Mutation {
  createProduct(title: String!, quantity: Int!, description: String, price: Float!, userId: ID!): Product
  updateProduct(id: ID!, title: String, quantity: Int, description: String, price: Float): Product
  deleteProduct(id: ID!): Boolean

  createCategory(name: String!, images: String): Category
  updateCategory(id: ID!, name: String, images: String): Category
  deleteCategory(id: ID!): Boolean

  createUser(fullname: String!, email: String!, password: String!, phone: String, categoryIds: [ID]): User
  updateUser(id: ID!, fullname: String, email: String, password: String, phone: String, categoryIds: [ID]): User
  deleteUser(id: ID!): Boolean
}

type Product {
  id: ID
  title: String
  quantity: Int
  description: String
  price: Float
  user: User
}

type Category {
  id: ID
  name: String
  images: String
  users: [User]
}

type User {
  id: ID
  fullname: String
  email: String
  password: String
  phone: String
  products: [Product]
  categories: [Category]
}